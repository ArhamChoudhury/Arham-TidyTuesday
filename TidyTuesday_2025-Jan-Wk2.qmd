---
title: "TidyTuesday-2025-Jan-wk2"
author: "Arham Choudhury"
format: html
---

```{r load_libraries}
#| echo: false
#| output: false
library(tidyverse)
library(tidytuesdayR)
library(readxl)
library(writexl)
library(ellmer)
library(glue)
library(gt)
```

```{r prep_data_small}
tuesdata <- tidytuesdayR::tt_load('2025-01-14')

conf2023 <- tuesdata$conf2023
conf2024 <- tuesdata$conf2024

# Function to count the number of words in a string
count_words <- function(text) {
  ifelse(is.na(text), 0, str_count(text, "\\S+"))
}


df <- conf2024 |> 
  filter(track == "Lightning Talks") |> 
  filter(is.na(description) == FALSE) |> 
  select(talk_title, description) |> 
  rename_with(~ paste0("human_", .)) |> 
  mutate(human_title_word_count = count_words(human_talk_title)) |> 
  mutate(human_description_word_count = count_words(human_description))
  
df_to_view <- df |> 
  gt() |>
  cols_width(
    human_talk_title ~ px(200) 
  ) |>
  tab_options(
    table.font.size = px(12),       
    data_row.padding = px(4)       
  )
df_to_view
```


```{r ellmer_functions}
#functions to use in {ellmer} #1
basic_summary <- function(text) {
  chat <- chat_openai(
    model = "gpt-4o",
    system_prompt = "You are a friendly assistant.",
  )
  chat$chat(glue("Summarize this text in under 15 words: {text}"))
}

#functions to use in {ellmer} #2
generate_talk_title <- function(text) {
  chat <- chat_openai(
    model = "gpt-4o",
    system_prompt = "You are a great public speaker",
  )
  chat$chat(glue("Using less than 15 words, 
                 create a compelling headline 
                 from the abstract of this talk: {text}"))
}
```

```{r apply_ellmer_1}
#| output: false
df_ai_summaries <- df |> 
  group_by(human_talk_title) |> 
  mutate(ai_summary = basic_summary(human_description)) |> 
  mutate(ai_summary_word_count = count_words(ai_summary)) |> 
  select(human_talk_title, ai_summary, human_description, everything())
```

```{r view_output_ellmer_1}
  
df_ai_summaries_to_view <- df_ai_summaries |>
  ungroup() |> 
  gt() |>
  cols_width(
    human_talk_title ~ px(100), 
    ai_summary ~ px(100),         
    human_description ~ px(300),
    everything() ~ px(150)     
  ) 
df_ai_summaries_to_view
```

```{r apply_ellmer_2}
#| output: false
df_ai_titles <- df |> 
  group_by(human_talk_title) |> 
  mutate(ai_title = generate_talk_title(human_description)) |> 
  mutate(ai_title_word_count = count_words(ai_title)) |> 
  select(human_talk_title, ai_title, human_description, everything())
```

```{r view_ellmer_output_2}
df_ai_titles_to_view <- df_ai_titles |> 
  ungroup() |> 
  gt() |>
  cols_width(
    human_talk_title ~ px(100), 
    ai_title ~ px(100),         
    human_description ~ px(300),
    everything() ~ px(150)     
  ) 
df_ai_titles_to_view
```

```{r output_for_human_review}
write_xlsx(df_ai_summaries, "00_Outputs/df_ai_summaries.xlsx")
write_xlsx(df_ai_titles,    "00_Outputs/df_ai_titles.xlsx")
```
